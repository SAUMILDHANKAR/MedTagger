version: '3'

services:
  reverse-proxy:
    image: traefik
    restart: unless-stopped
    command: --configFile=/var/traefik/traefik.toml
    ports:
      - 80:80
      - 52000:8080
    volumes:
      - $PWD/traefik.toml:/var/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"

  cassandra:
    image: cassandra
    restart: unless-stopped
    volumes:
      - cassandra-data:/var/lib/cassandra
    ports:
      - 9042:9042
    labels:
      - "traefik.enable=false"

  rabbitmq:
    image: rabbitmq:management
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia
    ports:
      - 5672:5672
      - 15672:15672
    labels:
      - "traefik.enable=false"

  postgres:
    image: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: medtagger
      POSTGRES_USER: medtagger_user
      POSTGRES_PASSWORD: MedTa99er!
    labels:
      - "traefik.enable=false"

  medtagger_frontend:
    image: medtagger_frontend/web
    restart: unless-stopped
    depends_on:
      - medtagger_backend_rest
    labels:
      - "traefik.backend=medtagger_frontend"
      - "traefik.frontend.rule=PathPrefix: /; ReplacePathRegex: /(.*) /$$1"

  medtagger_backend_rest:
    image: medtagger_backend/rest
    restart: unless-stopped
    env_file:
      - ./medtagger.env
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
      - medtagger_backend_websocket
      - medtagger_backend_worker
    command: bash -c "./scripts/wait_for_dependencies.sh && make run_rest_production"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.backend=medtagger_backend_rest"
      - "traefik.frontend.rule=PathPrefix: /api/v1/,/swaggerui/; ReplacePathRegex: /(.*) /$$1"

  medtagger_backend_websocket:
    image: medtagger_backend/websocket
    restart: unless-stopped
    env_file:
      - ./medtagger.env
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
    command: bash -c "./scripts/wait_for_dependencies.sh && make run_websocket_production"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.backend=medtagger_backend_websocket"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "traefik.backend.loadbalancer.stickiness.cookieName=MEDTAGER_WEBSOCKET_NODE"
      - "traefik.frontend.rule=PathPrefix: /socket.io; ReplacePathRegex: /(.*) /$$1"

  medtagger_backend_worker:
    image: medtagger_backend/worker
    restart: unless-stopped
    env_file:
      - ./medtagger.env
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
    command: bash -c "./scripts/wait_for_dependencies.sh && make run_workers"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.enable=false"

  medtagger_backend_database_migrations:
    image: medtagger_backend/database_migrations
    env_file:
      - ./medtagger.env
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
    command: bash -c "./scripts/dev__prepare_backend.sh"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.enable=false"

volumes:
  cassandra-data:
  rabbitmq-data:
  postgres-data:
